name: CI

on:
  push:
    paths-ignore:
      - "**.md"
    tags:
      - "*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test:
    runs-on: ${{ matrix.os }}
    # runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Get the version from the yyp file
        shell: bash
        run: |
          echo "YYP_VERSION=$(grep -oP '(?<=IDEVersion":")(\d+\.\d+\.\d+\.\d+)(?=")' ${{ github.workspace }}/Ganary/Ganary.yyp)" >> $GITHUB_ENV  
      - uses: FedericoCarboni/setup-ffmpeg@v3
        if: runner.os == 'Linux'
      - name: Create the settings file
        if: runner.os == 'Linux'
        run: |
          echo '{"machine.Platform Settings.Android.Keystore.filename": "${{ github.workspace }}/ascx.keystore", "machine.Platform Settings.Android.Keystore.keystore_password": "${{ secrets.KEYSTORE_PASSWORD }}", "machine.Platform Settings.Android.Keystore.keystore_alias_password": "${{ secrets.KEYSTORE_PASSWORD }}", "machine.Platform Settings.Android.Keystore.alias": "${{ secrets.KEYSTORE_USERNAME }}"}' > local_settings.json
      - name: Set Up Android tools (Linux only)
        if: runner.os == 'Linux'
        run: |
          ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager \
          --sdk_root=$ANDROID_SDK_ROOT \
          "platform-tools"
      - uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/bootstrapper
            ${{ github.workspace }}/runtimes
          key: ${{ runner.os }}-${{ env.YYP_VERSION }}
      - name: use Igor Setup
        uses: bscotch/igor-setup@main
        with:
          access-key: ${{ secrets.ACCESS_KEY }}
          target-yyp: ${{ github.workspace }}/Ganary/Ganary.yyp
          local-settings-override-file: ${{ github.workspace }}/local_settings.json
        id: igor
      - name: Read settings-dir and echo the json content
        run: |
          echo "UserDir: ${{ steps.igor.outputs.settings-dir }}"
          # Read the json content
          cat ${{ steps.igor.outputs.settings-dir }}
      - name: use Igor build
        uses: bscotch/igor-build@main
        id: build
        with:
          yyp-path: ${{ github.workspace }}/Ganary/Ganary.yyp
          user-dir: ${{ steps.igor.outputs.user-dir }}
      - name: upload-build
        uses: actions/upload-artifact@v4
        with:
          name: igor-build-${{ matrix.os }}
          path: ${{ steps.build.outputs.out-dir }}